WEBVTT

00:00:00.001 --> 00:00:03.160
Welcome to my talk on how to design a network's

00:00:03.160 --> 00:00:04.000
topology

00:00:04.000 --> 00:00:07.380
when its components are moving at speeds of 27,000

00:00:07.380 --> 00:00:09.000
km/h.

00:00:09.000 --> 00:00:12.490
Let me start by touching upon three fantastic

00:00:12.490 --> 00:00:15.000
recent advances in space technology.

00:00:15.000 --> 00:00:18.230
Reusable boosters which come back to Earth after

00:00:18.230 --> 00:00:21.000
launching rockets, thus reducing launch costs.

00:00:21.000 --> 00:00:24.220
Significant reduction in size and weight of

00:00:24.220 --> 00:00:25.000
satellites,

00:00:25.000 --> 00:00:28.000
thereby packing more satellites per launch,

00:00:28.000 --> 00:00:29.000
reducing costs.

00:00:29.000 --> 00:00:32.650
And automated link tracking which enables inter-satellite

00:00:32.650 --> 00:00:34.000
laser communication.

00:00:34.000 --> 00:00:36.240
Products offering laser inter-satellite

00:00:36.240 --> 00:00:39.000
connectivity at 10 to 20 G

00:00:39.000 --> 00:00:43.000
at distances up to 8,000 km are already available.

00:00:43.000 --> 00:00:46.450
One caveat is that it takes a few seconds to tens

00:00:46.450 --> 00:00:49.000
of seconds to establish these laser ISLs.

00:00:49.000 --> 00:00:51.670
This will later be important when we discuss the

00:00:51.670 --> 00:00:54.000
various topology design challenges.

00:00:54.000 --> 00:00:58.000
But what are all these developments leading up to?

00:00:58.000 --> 00:01:01.000
The primary goal is to build mega constellations

00:01:01.000 --> 00:01:04.000
consisting of thousands of low-flying satellites

00:01:04.000 --> 00:01:07.050
which provide global low-latency internet

00:01:07.050 --> 00:01:08.000
coverage.

00:01:08.000 --> 00:01:10.000
SpaceX is leading the front.

00:01:10.000 --> 00:01:12.820
Their project is named Starlink and they have

00:01:12.820 --> 00:01:15.540
already deployed more than 800 satellites in

00:01:15.540 --> 00:01:16.000
orbit.

00:01:16.000 --> 00:01:19.290
During the first phase, they plan to deploy 1,600

00:01:19.290 --> 00:01:22.000
satellites and start providing internet coverage.

00:01:22.000 --> 00:01:24.780
Their long-term plan is to deploy tens of

00:01:24.780 --> 00:01:28.000
thousands of very low-flying satellites.

00:01:28.000 --> 00:01:32.000
Amazon is working on a similar project named Kuiper

00:01:32.000 --> 00:01:35.230
and plans to deploy more than 3,000 satellites in

00:01:35.230 --> 00:01:36.000
three phases

00:01:36.000 --> 00:01:38.040
with each phase having slightly differing

00:01:38.040 --> 00:01:39.000
configurations.

00:01:39.000 --> 00:01:41.690
Various companies and startups have joined this

00:01:41.690 --> 00:01:45.240
race and have their projects at different levels

00:01:45.240 --> 00:01:47.000
of maturity.

00:01:47.000 --> 00:01:49.400
We here explore how to connect satellites with

00:01:49.400 --> 00:01:53.000
each other in order to build such networks and

00:01:53.000 --> 00:01:55.000
deliver traffic effectively.

00:01:55.000 --> 00:01:57.590
But before we discuss topology design, we'll go

00:01:57.590 --> 00:02:00.000
through a primer on constellation design

00:02:00.000 --> 00:02:03.040
followed by discussions on the challenges of LEO

00:02:03.040 --> 00:02:05.000
networks and the utility of ISLs.

00:02:05.000 --> 00:02:07.890
First, a brief primer on the proposed satellite

00:02:07.890 --> 00:02:11.000
constellations is necessary to set the context.

00:02:11.000 --> 00:02:13.960
How do we describe a constellation and what

00:02:13.960 --> 00:02:16.530
features distinguish this setting from

00:02:16.530 --> 00:02:19.000
traditional terrestrial networks?

00:02:19.000 --> 00:02:22.120
The first descriptive parameter I'll mention is

00:02:22.120 --> 00:02:23.000
altitude.

00:02:23.000 --> 00:02:25.960
A geosynchronous or geosatellite has a height of

00:02:25.960 --> 00:02:28.000
36,000 kilometers

00:02:28.000 --> 00:02:30.700
and the minimum round-trip times or RTTs are

00:02:30.700 --> 00:02:33.000
nearly 240 milliseconds.

00:02:33.000 --> 00:02:35.590
Lower-Earth orbit or LEO satellites, on the other

00:02:35.590 --> 00:02:39.250
hand, fly at heights between 300 and 2,000

00:02:39.250 --> 00:02:40.000
kilometers,

00:02:40.000 --> 00:02:44.000
thus reducing RTTs by more than 60x.

00:02:44.000 --> 00:02:48.000
Another descriptor is orbital inclination.

00:02:48.000 --> 00:02:51.000
Each orbit here has several satellites.

00:02:51.000 --> 00:02:54.460
While polar orbits travels over the poles, orbits

00:02:54.460 --> 00:02:56.000
can also be inclined.

00:02:56.000 --> 00:02:58.960
Inclination is the angle between the orbit and

00:02:58.960 --> 00:03:00.000
the equator.

00:03:00.000 --> 00:03:03.000
Here, the inclination is 53 degrees.

00:03:03.000 --> 00:03:06.070
Inclined orbits restrict satellites over densely

00:03:06.070 --> 00:03:08.000
populated lower latitudes.

00:03:08.000 --> 00:03:12.000
For polar orbits, the inclination is 90 degrees.

00:03:12.000 --> 00:03:15.060
Laser or radio links can be used between

00:03:15.060 --> 00:03:18.000
satellites, with laser offering higher data rates.

00:03:18.000 --> 00:03:20.740
Typically, there is a north-south-east-west

00:03:20.740 --> 00:03:23.430
connectivity pattern, which I will refer to

00:03:23.430 --> 00:03:25.000
throughout as plus grid.

00:03:25.000 --> 00:03:27.860
To the best of our knowledge, all publicly

00:03:27.860 --> 00:03:32.190
available scientific papers, patents, and visualizations

00:03:32.190 --> 00:03:35.000
assume the same plus grid connectivity.

00:03:35.000 --> 00:03:38.060
A key feature of this constellation's promised

00:03:38.060 --> 00:03:41.300
connectivity is lower latency over distances

00:03:41.300 --> 00:03:44.000
beyond a few thousand kilometers.

00:03:44.000 --> 00:03:47.170
In this example, we are seeing a path between Zurich

00:03:47.170 --> 00:03:49.000
and Mumbai over satellites,

00:03:49.000 --> 00:03:52.290
which is quite close to the geodesic compared to

00:03:52.290 --> 00:03:55.000
fiber, which is roughly 2x longer.

00:03:55.000 --> 00:03:57.630
The speed of light being two-third in fiber

00:03:57.630 --> 00:04:01.130
compared to free space means that the fiber path

00:04:01.130 --> 00:04:03.000
will be 3x higher latency.

00:04:03.000 --> 00:04:07.040
We will refer to this inflation over geodesic, in

00:04:07.040 --> 00:04:10.000
this case 3x for fiber, as stretch.

00:04:10.000 --> 00:04:12.600
We compared the RTTs between the eight most

00:04:12.600 --> 00:04:15.830
popular cities over today's internet to the

00:04:15.830 --> 00:04:18.000
estimated RTTs over a plus grid constellation

00:04:18.000 --> 00:04:21.000
consisting of 1600 satellites.

00:04:21.000 --> 00:04:24.310
The estimated RTTs are 70% lower than today's

00:04:24.310 --> 00:04:26.000
internet at the median.

00:04:26.000 --> 00:04:29.640
So, if the current RTT is 100 milliseconds, the

00:04:29.640 --> 00:04:32.000
estimated RTT is 30 milliseconds.

00:04:32.000 --> 00:04:35.160
The estimates for the satellite network are a bit

00:04:35.160 --> 00:04:37.290
optimistic as we did not consider latency

00:04:37.290 --> 00:04:39.690
inflation due to encoding, error correction, and

00:04:39.690 --> 00:04:41.000
other factors.

00:04:41.000 --> 00:04:43.640
But even a 20% increase in the estimate would

00:04:43.640 --> 00:04:46.760
result in an RTT of 36 milliseconds, which is

00:04:46.760 --> 00:04:51.000
still significantly lower than today's internet.

00:04:51.000 --> 00:04:54.340
We could also see from the plot that the latencies

00:04:54.340 --> 00:04:57.840
over satellite paths are very close to the geodesic

00:04:57.840 --> 00:05:01.000
latencies at the speed of light in vacuum.

00:05:01.000 --> 00:05:03.750
Let us now explore the system dynamics of these

00:05:03.750 --> 00:05:05.000
constellations.

00:05:05.000 --> 00:05:08.520
Satellites move very fast related to the Earth

00:05:08.520 --> 00:05:11.000
and with respect to each other.

00:05:11.000 --> 00:05:13.860
If a satellite is now over eastern Brazil, in 6

00:05:13.860 --> 00:05:16.590
minutes it will already reach Africa, crossing

00:05:16.590 --> 00:05:21.000
the entire Atlantic, traveling more than 500 km/min.

00:05:21.000 --> 00:05:24.470
Such highly dynamic behavior translates to links

00:05:24.470 --> 00:05:27.000
becoming infeasible in minutes.

00:05:27.000 --> 00:05:30.340
We should keep this in mind while exploring topology

00:05:30.340 --> 00:05:33.470
design and prioritize links which are available

00:05:33.470 --> 00:05:35.000
for longer periods.

00:05:35.000 --> 00:05:37.850
Having gone through the primer, let us now look

00:05:37.850 --> 00:05:40.490
at some of the challenges that arise due to the

00:05:40.490 --> 00:05:44.010
scale and extreme dynamicity of these mega-constellation

00:05:44.010 --> 00:05:45.000
networks.

00:05:45.000 --> 00:05:48.290
Our work at ACM HotNets 2018 discusses the

00:05:48.290 --> 00:05:51.580
opportunities and challenges of these networks in

00:05:51.580 --> 00:05:53.000
further details.

00:05:53.000 --> 00:05:58.000
Of course, topology design is a challenge.

00:05:58.000 --> 00:06:00.060
How do we define the trajectories of the

00:06:00.060 --> 00:06:02.550
satellites and set up inter-satellite links in

00:06:02.550 --> 00:06:05.120
order to serve the geographically distributed

00:06:05.120 --> 00:06:06.000
population?

00:06:06.000 --> 00:06:08.870
The various objectives, constraints, and

00:06:08.870 --> 00:06:11.750
challenges and geographically varying demands

00:06:11.750 --> 00:06:14.290
make topology design a high-dimensional

00:06:14.290 --> 00:06:16.000
optimization problem.

00:06:16.000 --> 00:06:18.130
We do not yet know whether the Starlink

00:06:18.130 --> 00:06:21.000
constellation is the optimal solution to this.

00:06:21.000 --> 00:06:24.820
Let us now see an interesting implication of a

00:06:24.820 --> 00:06:29.000
satellite autonomous system or ACE on BGP routing.

00:06:29.000 --> 00:06:33.900
Each of the 4 terrestrial ACEs, AS1 through AS4,

00:06:33.900 --> 00:06:37.000
pair with the satellite ACE, which is ASAT.

00:06:37.000 --> 00:06:41.970
AS1 has two equal ACE length paths to AS3,

00:06:41.970 --> 00:06:44.000
through AS2 and ASAT.

00:06:44.000 --> 00:06:47.180
The geographic distances could mean that where

00:06:47.180 --> 00:06:50.430
ACE is choosing routes based on latency, AS1

00:06:50.430 --> 00:06:54.000
should prefer the terrestrial route to AS3.

00:06:54.000 --> 00:06:58.000
Likewise, AS2 has two similar paths to AS4.

00:06:58.000 --> 00:07:01.390
AS2 should ideally prefer the satellite route to

00:07:01.390 --> 00:07:04.000
AS4 in order to lower the latency.

00:07:04.000 --> 00:07:06.280
While it is already the case that ACE path

00:07:06.280 --> 00:07:09.020
lengths in today's internet are poor proxies for

00:07:09.020 --> 00:07:12.450
performance, these satellite networks may make

00:07:12.450 --> 00:07:15.750
this discrepancy larger in magnitude and more

00:07:15.750 --> 00:07:17.000
commonplace.

00:07:17.000 --> 00:07:20.470
Let us now see how routing can be made weather-aware

00:07:20.470 --> 00:07:23.000
and what can be the implications.

00:07:23.000 --> 00:07:25.850
Imagine this is the path through which data is

00:07:25.850 --> 00:07:28.000
delivered to the destination.

00:07:28.000 --> 00:07:31.550
Cloud cover can introduce significantly higher

00:07:31.550 --> 00:07:35.000
loss rates based on operating frequencies.

00:07:35.000 --> 00:07:38.250
One approach to deal with this problem is to reroute

00:07:38.250 --> 00:07:41.000
network traffic around such cloud cover.

00:07:41.000 --> 00:07:44.410
This results in lower loss rates but can increase

00:07:44.410 --> 00:07:47.260
the aggregate stretch of the network due to

00:07:47.260 --> 00:07:49.000
higher latencies.

00:07:49.000 --> 00:07:53.000
Let us now look at congestion control challenges.

00:07:53.000 --> 00:07:56.250
This graph plots the time-varying latency between

00:07:56.250 --> 00:07:59.930
the two locations for a period of 2000 seconds at

00:07:59.930 --> 00:08:02.000
a granularity of 1 second.

00:08:02.000 --> 00:08:05.140
Even recently proposed congestion control schemes

00:08:05.140 --> 00:08:08.020
like PCC Vivace, VBR, or COPA do not account for

00:08:08.020 --> 00:08:10.000
such variations in latency.

00:08:10.000 --> 00:08:14.000
They either assume end-to-end latency to be fixed

00:08:14.000 --> 00:08:16.960
or try to estimate the minimum latency to be the

00:08:16.960 --> 00:08:20.000
smallest seen over the last few round trips.

00:08:20.000 --> 00:08:22.940
Any additional delay is considered as a mark of

00:08:22.940 --> 00:08:24.000
congestion.

00:08:24.000 --> 00:08:27.110
Note that such delay due to path latency and path

00:08:27.110 --> 00:08:30.000
changes is highly predictable in satellite

00:08:30.000 --> 00:08:31.000
networks.

00:08:31.000 --> 00:08:35.410
Also, frequent path changes result in packet reordering,

00:08:35.410 --> 00:08:39.070
thus affecting even loss-based congestion control

00:08:39.070 --> 00:08:40.000
schemes.

00:08:40.000 --> 00:08:42.250
Having gone through the general challenges, let

00:08:42.250 --> 00:08:45.810
us quickly touch upon the utility of laser ISLs

00:08:45.810 --> 00:08:49.000
before we start discussing topology design.

00:08:49.000 --> 00:08:52.620
Our work at ACM HotNets 2020 discusses the

00:08:52.620 --> 00:08:56.000
benefits of having ISLs in further details.

00:08:56.000 --> 00:08:59.250
Despite the high-bandwidth, low-latency ISL

00:08:59.250 --> 00:09:02.290
promise, there is substantial uncertainty about

00:09:02.290 --> 00:09:04.670
whether or not LEO constellations will

00:09:04.670 --> 00:09:07.000
successfully incorporate ISLs.

00:09:07.000 --> 00:09:10.540
One hurdle may be the burn-on-reentry requirement

00:09:10.540 --> 00:09:14.130
that regulators are asking operators to satisfy,

00:09:14.130 --> 00:09:17.040
thus not risking injury and damage from deorbiting

00:09:17.040 --> 00:09:18.000
satellites.

00:09:18.000 --> 00:09:21.250
In response, Starlink's filings were amended to

00:09:21.250 --> 00:09:24.000
exclude mention of these components.

00:09:24.000 --> 00:09:27.150
None of the hundreds of already deployed Starlink

00:09:27.150 --> 00:09:29.000
satellites feature ISLs.

00:09:29.000 --> 00:09:33.800
Luckily, LEO networks do not need ISLs to provide

00:09:33.800 --> 00:09:35.000
service.

00:09:35.000 --> 00:09:38.500
One might think how to achieve long-distance end-to-end

00:09:38.500 --> 00:09:41.000
connectivity when there are no ISLs.

00:09:41.000 --> 00:09:43.920
Remember, as the constellations are being rolled

00:09:43.920 --> 00:09:47.000
out, ground terminals would also be rolled out.

00:09:47.000 --> 00:09:50.130
These terminals include user terminals on land

00:09:50.130 --> 00:09:53.210
and those mounted on airplanes and ships, and

00:09:53.210 --> 00:09:56.000
also more powerful ground stations.

00:09:56.000 --> 00:09:59.620
Without ISLs, connections between far-separated

00:09:59.620 --> 00:10:02.480
ground terminals bounce up and down between

00:10:02.480 --> 00:10:06.060
satellites and on-path terminals, yielding a bent

00:10:06.060 --> 00:10:08.000
pipe or BP connectivity.

00:10:08.000 --> 00:10:10.900
Latency lower than terrestrial Internet can be

00:10:10.900 --> 00:10:13.950
often achieved over long distances even with this

00:10:13.950 --> 00:10:16.000
restricted BP connectivity.

00:10:16.000 --> 00:10:20.310
A paper in HotNets 2019 focuses primarily on such

00:10:20.310 --> 00:10:22.000
latency benefits.

00:10:22.000 --> 00:10:25.110
However, in our work, we quantitatively show that

00:10:25.110 --> 00:10:28.720
even with dense ground station deployments, there

00:10:28.720 --> 00:10:32.330
are three very significant downsides to foregoing

00:10:32.330 --> 00:10:33.000
ISLs.

00:10:33.000 --> 00:10:36.100
Although LEO networks without ISLs still provide

00:10:36.100 --> 00:10:39.300
low latency between many ground locations, the

00:10:39.300 --> 00:10:41.830
temporal variation in latencies increases

00:10:41.830 --> 00:10:43.000
substantially.

00:10:43.000 --> 00:10:47.130
The network-wide throughput decreases heavily,

00:10:47.130 --> 00:10:49.580
and the network becomes more vulnerable to

00:10:49.580 --> 00:10:52.320
weather disruption because of transit through

00:10:52.320 --> 00:10:54.000
satellite ground links.

00:10:54.000 --> 00:10:57.210
In-depth quantitative analyses of these downsides

00:10:57.210 --> 00:11:00.220
are in the paper in case you are interested, but

00:11:00.220 --> 00:11:03.150
to give some brief insight, let us touch upon

00:11:03.150 --> 00:11:07.000
temporal latency variations and impact of weather.

00:11:07.000 --> 00:11:10.600
With BP, the path between Maceo in Brazil and Durban

00:11:10.600 --> 00:11:14.040
in South Africa, for example, sees an inflation

00:11:14.040 --> 00:11:17.000
of 100 milliseconds over time.

00:11:17.000 --> 00:11:19.860
This is because the density of weather traffic is

00:11:19.860 --> 00:11:22.320
much sparser over the South Atlantic than the

00:11:22.320 --> 00:11:23.000
North.

00:11:23.000 --> 00:11:26.050
Hence, the path often ends up using aircraft

00:11:26.050 --> 00:11:30.000
flying over the North Atlantic as intermediate hauls.

00:11:30.000 --> 00:11:33.280
Note that this behavior not only inflates the RTT

00:11:33.280 --> 00:11:36.710
of this path significantly, but also makes the

00:11:36.710 --> 00:11:39.680
heavily used paths over the North Atlantic even

00:11:39.680 --> 00:11:41.000
more congested.

00:11:41.000 --> 00:11:44.310
By virtue of inter-satellite links in a dense

00:11:44.310 --> 00:11:48.350
deployment of satellites, such latency variations

00:11:48.350 --> 00:11:51.000
get reduced by as much as 80%.

00:11:51.000 --> 00:11:53.790
The impact of weather would be significantly

00:11:53.790 --> 00:11:55.850
higher on BP connectivity than on ISL

00:11:55.850 --> 00:11:57.000
connectivity.

00:11:57.000 --> 00:12:00.240
For paths consisting of ISLs, this value is

00:12:00.240 --> 00:12:03.260
either the first or last hop attenuation,

00:12:03.260 --> 00:12:05.000
whichever is worse.

00:12:05.000 --> 00:12:07.990
But for BP paths, this is the worst attenuation

00:12:07.990 --> 00:12:11.020
seen across all links of the zigzag path bouncing

00:12:11.020 --> 00:12:13.000
between the satellites and GT.

00:12:13.000 --> 00:12:17.230
In this example, the heat map depicts the 99.5th

00:12:17.230 --> 00:12:21.000
percentile attenuation across Southeast Asia.

00:12:21.000 --> 00:12:24.400
Although both endpoints, Delhi and Sydney, are in

00:12:24.400 --> 00:12:27.020
low attenuation areas, BP ends up using

00:12:27.020 --> 00:12:31.000
intermediate hops in regions with higher attenuation.

00:12:31.000 --> 00:12:35.370
In contrast, the ISL path avoids this entire high

00:12:35.370 --> 00:12:38.000
attenuation region.

00:12:38.000 --> 00:12:41.030
There are various other benefits of ISLs which BP

00:12:41.030 --> 00:12:44.000
struggles with, which I briefly touch upon.

00:12:44.000 --> 00:12:46.710
BP connectivity between certain sources and

00:12:46.710 --> 00:12:50.000
destinations is bound to require GTs in countries

00:12:50.000 --> 00:12:52.150
and regions that an operator would like to avoid,

00:12:52.150 --> 00:12:55.300
either because of challenging topography or due

00:12:55.300 --> 00:12:57.000
to political reasons.

00:12:57.000 --> 00:12:59.860
Car and Ku-band radio spectrum for the up and

00:12:59.860 --> 00:13:02.000
down links needs licensing.

00:13:02.000 --> 00:13:04.620
In contrast, thanks to the narrow beams and

00:13:04.620 --> 00:13:07.740
negligible interference issues, inter-satellite

00:13:07.740 --> 00:13:10.000
laser connectivity is unlicensed.

00:13:10.000 --> 00:13:13.090
GSO satellites fly above the equator and operate

00:13:13.090 --> 00:13:15.720
in the same frequency bands sought for LEO

00:13:15.720 --> 00:13:17.000
communication.

00:13:17.000 --> 00:13:20.210
Thus, LEO satellites when crossing the lower latitudes

00:13:20.210 --> 00:13:23.020
near the equator must avoid interference with GSO

00:13:23.020 --> 00:13:24.000
satellites.

00:13:24.000 --> 00:13:26.850
While GT field of view is already restricted by

00:13:26.850 --> 00:13:30.100
the minimum angle of elevation, GSO arc avoidance

00:13:30.100 --> 00:13:33.000
makes this field of view even more restricted.

00:13:33.000 --> 00:13:35.820
The impact of this will be much higher on BP than

00:13:35.820 --> 00:13:38.500
on ISL connectivity for traffic between the

00:13:38.500 --> 00:13:41.000
northern and southern hemispheres.

00:13:41.000 --> 00:13:45.000
Here is the latest update on the status of ISLs.

00:13:45.000 --> 00:13:48.220
In their September 3 launch video, a SpaceX

00:13:48.220 --> 00:13:51.430
personnel announced the testing of laser ISLs in

00:13:51.430 --> 00:13:52.000
LEO.

00:13:52.000 --> 00:13:55.290
But a lot of uncertainties regarding ISLs still

00:13:55.290 --> 00:13:56.000
exist.

00:13:56.000 --> 00:13:59.000
What would be the link capacities in practice?

00:13:59.000 --> 00:14:02.170
Link setup is constrained by the fact that it

00:14:02.170 --> 00:14:04.430
takes a few seconds to tens of seconds to

00:14:04.430 --> 00:14:06.000
establish laser ISLs.

00:14:06.000 --> 00:14:09.020
How do we connect satellites using ISLs keeping

00:14:09.020 --> 00:14:11.000
in mind these constraints?

00:14:11.000 --> 00:14:14.000
This is what we discuss next.

00:14:14.000 --> 00:14:17.350
Such analysis is also relevant for constellations

00:14:17.350 --> 00:14:20.220
like OneWave which do not plan to incorporate

00:14:20.220 --> 00:14:21.000
laser ISLs.

00:14:21.000 --> 00:14:24.790
Okay, having gone through general challenges and

00:14:24.790 --> 00:14:27.930
the utility of having ISLs, we come back to the

00:14:27.930 --> 00:14:29.000
problem at hand.

00:14:29.000 --> 00:14:32.090
So how can we connect satellites in order to

00:14:32.090 --> 00:14:34.970
offer higher aggregate bandwidth keeping in mind

00:14:34.970 --> 00:14:37.000
the dynamics of the system?

00:14:37.000 --> 00:14:40.850
This work was published at ACM CONIX 2019 and is

00:14:40.850 --> 00:14:43.000
the main focus of this talk.

00:14:43.000 --> 00:14:45.710
I will now discuss what are the constraints we

00:14:45.710 --> 00:14:48.000
consider and assumptions we make.

00:14:48.000 --> 00:14:51.050
The key constraint of this system is system

00:14:51.050 --> 00:14:52.000
dynamics.

00:14:52.000 --> 00:14:55.870
Satellites flying fast relative to the Earth and

00:14:55.870 --> 00:14:57.000
to each other.

00:14:57.000 --> 00:15:00.000
But we have other constraints as follows.

00:15:00.000 --> 00:15:03.200
Setting up links can take a few seconds to tens

00:15:03.200 --> 00:15:06.320
of seconds, during which time the involved

00:15:06.320 --> 00:15:09.000
communication units cannot transfer data.

00:15:09.000 --> 00:15:12.000
Hence, it's important to minimize changes in

00:15:12.000 --> 00:15:14.000
which links are connected.

00:15:14.000 --> 00:15:18.050
Also, the maximum number of ISLs per satellite is

00:15:18.050 --> 00:15:19.000
limited.

00:15:19.000 --> 00:15:22.460
In our work, we consider 4 ISLs per satellite

00:15:22.460 --> 00:15:25.740
following all recent FCC filings, but we believe

00:15:25.740 --> 00:15:28.000
our methods can be extended for other numbers.

00:15:28.000 --> 00:15:31.040
I'll also lay out the assumptions we are making

00:15:31.040 --> 00:15:34.110
in solving the inter-satellite topology design

00:15:34.110 --> 00:15:35.000
problem.

00:15:35.000 --> 00:15:38.290
We assume that the satellite trajectories are

00:15:38.290 --> 00:15:39.000
given.

00:15:39.000 --> 00:15:42.640
We rely on FCC filings by SpaceX and Amazon that

00:15:42.640 --> 00:15:45.000
describe their trajectories.

00:15:45.000 --> 00:15:47.240
While trajectory design in itself is an

00:15:47.240 --> 00:15:50.090
interesting question, we have not explored it in

00:15:50.090 --> 00:15:51.000
this work.

00:15:51.000 --> 00:15:53.650
Knowing what precise traffic will be served on

00:15:53.650 --> 00:15:56.000
these constellations is difficult.

00:15:56.000 --> 00:15:59.260
Our evaluation uses traffic matrices drawn from

00:15:59.260 --> 00:16:02.190
intuition, but the same approach can be used for

00:16:02.190 --> 00:16:04.000
arbitrary input traffic.

00:16:04.000 --> 00:16:06.830
Our focus is on the satellite-to-satellite

00:16:06.830 --> 00:16:09.720
connectivity, so we assume that the ground

00:16:09.720 --> 00:16:13.320
satellite connectivity follows a simple range-bounded

00:16:13.320 --> 00:16:14.000
model.

00:16:14.000 --> 00:16:17.330
We treat plus-grid connectivity, which I already

00:16:17.330 --> 00:16:20.000
touched upon earlier, as our baseline.

00:16:20.000 --> 00:16:23.630
On the last point, plus-grid being the baseline,

00:16:23.630 --> 00:16:26.000
what are we trying to improve?

00:16:26.000 --> 00:16:28.630
One drawback of these very local links to

00:16:28.630 --> 00:16:31.730
adjacent satellites is that one requires large

00:16:31.730 --> 00:16:35.000
number of hops to reach distant destinations.

00:16:35.000 --> 00:16:37.440
On each hop, the end-to-end communication

00:16:37.440 --> 00:16:40.030
consumes resources, limiting the network's

00:16:40.030 --> 00:16:41.000
throughput.

00:16:41.000 --> 00:16:44.500
We would thus like to build networks that give

00:16:44.500 --> 00:16:48.000
short paths but also admit high capacity.

00:16:48.000 --> 00:16:51.130
We don't need to stick to plus-grid's very local

00:16:51.130 --> 00:16:52.000
links.

00:16:52.000 --> 00:16:55.220
The key constraint on ISLs is for them to not dip

00:16:55.220 --> 00:16:57.000
into the mesosphere.

00:16:57.000 --> 00:17:00.020
This is the atmospheric layer that extends to

00:17:00.020 --> 00:17:03.440
about 80 km above the Earth's surface, beyond

00:17:03.440 --> 00:17:06.000
which there is no water vapor present.

00:17:06.000 --> 00:17:09.030
Given the altitude of satellites, in this example

00:17:09.030 --> 00:17:13.030
550 km, using simple geometry, we can calculate

00:17:13.030 --> 00:17:16.510
the maximum permissible ISL length, that is about

00:17:16.510 --> 00:17:19.000
5000 km here.

00:17:19.000 --> 00:17:23.000
This observation opens up a large design space.

00:17:23.000 --> 00:17:25.790
While at small scale, with few tens of satellites,

00:17:25.790 --> 00:17:28.380
only simple connectivity was possible, in the

00:17:28.380 --> 00:17:31.050
large proposed constellations, each satellite can

00:17:31.050 --> 00:17:33.000
now reach many more satellites.

00:17:33.000 --> 00:17:36.030
We are still restricted to being able to connect

00:17:36.030 --> 00:17:38.850
to only a few though, limited by the maximum

00:17:38.850 --> 00:17:41.000
number of ISLs per satellite.

00:17:41.000 --> 00:17:44.180
In picking the particular subset of links to

00:17:44.180 --> 00:17:48.000
connect, what should we optimize for?

00:17:48.000 --> 00:17:51.060
We use simple intuitive traffic matrices for our

00:17:51.060 --> 00:17:52.000
evaluation.

00:17:52.000 --> 00:17:55.380
We pick the 1000 most popular cities and use a

00:17:55.380 --> 00:17:58.000
population-product traffic matrix.

00:17:58.000 --> 00:18:01.270
Let city1, city2, and city3 be 3 cities with

00:18:01.270 --> 00:18:03.000
different populations.

00:18:03.000 --> 00:18:06.200
The traffic between city pairs is proportional to

00:18:06.200 --> 00:18:08.000
their population product.

00:18:08.000 --> 00:18:11.690
We also tested a variant which relies on GDP

00:18:11.690 --> 00:18:14.000
instead of population.

00:18:14.000 --> 00:18:17.290
Recall that I earlier mentioned stretch and hop

00:18:17.290 --> 00:18:18.000
count.

00:18:18.000 --> 00:18:20.690
Stretch is the inflation in latency over the

00:18:20.690 --> 00:18:23.810
minimum possible, that is traveling the geodesic

00:18:23.810 --> 00:18:26.000
at the speed of light in vacuum.

00:18:26.000 --> 00:18:28.760
Hop count accounts for resource consumption and

00:18:28.760 --> 00:18:30.000
hence congestion.

00:18:30.000 --> 00:18:32.800
In our paper, we show that lower hop count

00:18:32.800 --> 00:18:36.070
actually translates to less congestion in these

00:18:36.070 --> 00:18:37.000
networks.

00:18:37.000 --> 00:18:39.660
We also define an aggregate metric as a linear

00:18:39.660 --> 00:18:42.800
combination of stretch and hop count, with alpha

00:18:42.800 --> 00:18:46.000
being the weight or importance of stretch.

00:18:46.000 --> 00:18:48.880
Superficially, this seems like a traditional

00:18:48.880 --> 00:18:51.000
network topology design problem.

00:18:51.000 --> 00:18:53.640
These are known to be hard even in static

00:18:53.640 --> 00:18:56.980
settings, but a variety of heuristics are used in

00:18:56.980 --> 00:18:58.000
practice.

00:18:58.000 --> 00:19:01.080
One key contribution of this work is showing why

00:19:01.080 --> 00:19:04.000
traditional techniques don't work here.

00:19:04.000 --> 00:19:07.310
We tried integer programming, but it suffers from

00:19:07.310 --> 00:19:09.000
two major shortcomings.

00:19:09.000 --> 00:19:11.000
It is limited in scalability.

00:19:11.000 --> 00:19:13.960
Runtime is greater than 2 days even for 25 cities

00:19:13.960 --> 00:19:16.870
on a beefy machine, and the estimate is roughly

00:19:16.870 --> 00:19:20.000
10^29 days for 1000 cities.

00:19:20.000 --> 00:19:22.320
But even if we manage to speed up the ILP by a

00:19:22.320 --> 00:19:25.040
large factor or use appropriate approximation

00:19:25.040 --> 00:19:28.370
techniques, there is a more fundamental issue

00:19:28.370 --> 00:19:29.000
here.

00:19:29.000 --> 00:19:32.830
The set of ISLs minutes apart are more than 90%

00:19:32.830 --> 00:19:34.000
different.

00:19:34.000 --> 00:19:36.390
We should remember that ISL setup times are few

00:19:36.390 --> 00:19:38.000
seconds to tens of seconds.

00:19:38.000 --> 00:19:40.900
So even if we could solve the problem optimally

00:19:40.900 --> 00:19:44.280
for a snapshot, the set of optimal links varies

00:19:44.280 --> 00:19:47.000
significantly minute to minute.

00:19:47.000 --> 00:19:50.010
Hence, to maintain optimality, the system would

00:19:50.010 --> 00:19:53.000
need to break and make a lot of links continually,

00:19:53.000 --> 00:19:56.340
resulting in significant disruption of

00:19:56.340 --> 00:19:58.000
connectivity.

00:19:58.000 --> 00:20:00.890
We also tried random graphs as they are shown to

00:20:00.890 --> 00:20:04.000
be useful in other settings like data centers.

00:20:04.000 --> 00:20:06.850
Although such random graph generation is faster,

00:20:06.850 --> 00:20:09.290
it also suffers from large number of links

00:20:09.290 --> 00:20:12.000
becoming infeasible within a few minutes.

00:20:12.000 --> 00:20:14.040
Regaining lost connectivity is not

00:20:14.040 --> 00:20:16.840
straightforward, and one would have to break and

00:20:16.840 --> 00:20:18.000
make many links.

00:20:18.000 --> 00:20:21.050
Additionally, random graphs are very inflexible

00:20:21.050 --> 00:20:23.670
and do not allow the operator to decide on the

00:20:23.670 --> 00:20:25.000
operating point.

00:20:25.000 --> 00:20:28.360
They simply yield one combination of stretch and

00:20:28.360 --> 00:20:30.950
hop count without any control over which

00:20:30.950 --> 00:20:33.000
dimension to optimize for.

00:20:33.000 --> 00:20:36.000
So where do we go from here?

00:20:36.000 --> 00:20:41.970
This, this, and this picture have something in

00:20:41.970 --> 00:20:43.000
common.

00:20:43.000 --> 00:20:45.520
They illustrate the use of structure and

00:20:45.520 --> 00:20:49.000
repetition for design, in this case visual design.

00:20:49.000 --> 00:20:52.130
We apply the same idea of repetitive geometric

00:20:52.130 --> 00:20:55.000
structure to network topology design.

00:20:55.000 --> 00:20:58.000
Consider this 1600 satellite constellation.

00:20:58.000 --> 00:21:01.070
This is the field of view or connectivity for one

00:21:01.070 --> 00:21:04.000
satellite, which goes beyond plus grid.

00:21:04.000 --> 00:21:06.700
A motif consists of two links with two other

00:21:06.700 --> 00:21:09.730
satellites, and this pattern can be repeated

00:21:09.730 --> 00:21:12.000
throughout to build the network.

00:21:12.000 --> 00:21:14.670
Note that in this case two linked motifs are

00:21:14.670 --> 00:21:17.700
sufficient, as remaining two would be filled by

00:21:17.700 --> 00:21:21.000
other satellites connecting to this satellite.

00:21:21.000 --> 00:21:23.730
One obvious benefit of using motifs is the fact

00:21:23.730 --> 00:21:26.000
that they have minimum link churn.

00:21:26.000 --> 00:21:28.810
Nearby satellites in adjacent orbits move

00:21:28.810 --> 00:21:31.360
together and are always in the field of

00:21:31.360 --> 00:21:34.020
connectivity of each other and can remain

00:21:34.020 --> 00:21:36.000
connected continually.

00:21:36.000 --> 00:21:40.000
We have analyzed three different constellations.

00:21:40.000 --> 00:21:42.000
A uniform constellation consisting of 40 orbits

00:21:42.000 --> 00:21:45.700
and 40 satellites per orbit, operating at an inclination

00:21:45.700 --> 00:21:49.000
of 53 degrees and an altitude of 550 kilometers.

00:21:49.000 --> 00:21:51.850
SpaceX Starlink Phase 1, which consists of 24

00:21:51.850 --> 00:21:54.970
orbits with 66 satellites per orbit, operating at

00:21:54.970 --> 00:21:57.590
an inclination of 53 degrees and an altitude of

00:21:57.590 --> 00:21:59.000
550 kilometers.

00:21:59.000 --> 00:22:02.010
And Amazon Kuiper Phase 1, which is again a

00:22:02.010 --> 00:22:06.550
uniform 34-square constellation, operating at 51.9

00:22:06.550 --> 00:22:09.000
degrees and 630 kilometers.

00:22:09.000 --> 00:22:12.420
Here we plot the average hop count along x-axis

00:22:12.420 --> 00:22:15.320
and average stretch along y-axis for the

00:22:15.320 --> 00:22:17.000
different motifs.

00:22:17.000 --> 00:22:19.710
Note that both stretch and hop count are weighted

00:22:19.710 --> 00:22:22.360
by the traffic matrix, in this case population

00:22:22.360 --> 00:22:24.000
products for city pairs.

00:22:24.000 --> 00:22:27.460
Different motifs offer different trade-offs in

00:22:27.460 --> 00:22:30.200
stretch and hop count, and we can see a Pareto

00:22:30.200 --> 00:22:32.660
frontier of motifs superior to the rest in both

00:22:32.660 --> 00:22:34.000
hop count and stretch.

00:22:34.000 --> 00:22:37.280
Not only do motifs offer performance better than

00:22:37.280 --> 00:22:39.900
random graphs, they also provide higher

00:22:39.900 --> 00:22:42.000
flexibility to an operator.

00:22:42.000 --> 00:22:45.060
Note also that the random graph solution also

00:22:45.060 --> 00:22:47.000
suffers from link churn.

00:22:47.000 --> 00:22:51.000
So where is our baseline plus grid in all of this?

00:22:51.000 --> 00:22:54.400
This is where plus grid operates, with the best

00:22:54.400 --> 00:22:58.050
available stretch, but very high hop count, thus

00:22:58.050 --> 00:23:00.000
being a low efficiency motif.

00:23:00.000 --> 00:23:02.550
Note that the slope of this frontier is small

00:23:02.550 --> 00:23:04.920
enough on the right side, such that by

00:23:04.920 --> 00:23:09.090
sacrificing 2% stretch, one can improve hop count

00:23:09.090 --> 00:23:11.000
by as much as 32%.

00:23:11.000 --> 00:23:14.020
This is one of the resulting motifs for the 40-square

00:23:14.020 --> 00:23:16.430
constellation, that provides much higher

00:23:16.430 --> 00:23:19.200
efficiency than plus grid, using a combination of

00:23:19.200 --> 00:23:22.000
long and short links of different orientations.

00:23:22.000 --> 00:23:25.160
I am showing the two links in the motif in

00:23:25.160 --> 00:23:28.000
different colors here for clarity.

00:23:28.000 --> 00:23:32.030
So the motifs perform well, but can we do even

00:23:32.030 --> 00:23:33.000
better?

00:23:33.000 --> 00:23:37.000
Yes, by exploring the geometry of these constellations.

00:23:37.000 --> 00:23:40.320
Compare the field of view of a satellite at the

00:23:40.320 --> 00:23:43.000
equator to one at a higher latitude.

00:23:43.000 --> 00:23:47.000
We see the constellation is denser at higher latitudes.

00:23:47.000 --> 00:23:50.410
This translates to more options for connectivity

00:23:50.410 --> 00:23:53.000
as we go higher up from the equator.

00:23:53.000 --> 00:23:55.440
This plot quantifies the number of motif

00:23:55.440 --> 00:23:58.000
possibilities at different latitudes.

00:23:58.000 --> 00:24:01.000
For polar as well as inclined constellations, the

00:24:01.000 --> 00:24:04.000
number increases significantly with latitude.

00:24:04.000 --> 00:24:06.780
For example, for the inclined constellation,

00:24:06.780 --> 00:24:10.200
there are around 1000 options at the equator

00:24:10.200 --> 00:24:13.000
versus around 3500 at higher latitudes.

00:24:13.000 --> 00:24:16.000
So how do we exploit this characteristic?

00:24:16.000 --> 00:24:19.000
Consider a single orbital plane.

00:24:19.000 --> 00:24:21.820
A quadrant of this orbit consists of 10

00:24:21.820 --> 00:24:25.000
satellites out of the 40 in total in this orbit.

00:24:25.000 --> 00:24:28.910
We split the quadrant into multiple zones, 3 in

00:24:28.910 --> 00:24:30.000
this case.

00:24:30.000 --> 00:24:32.970
First, we find the optimal motif for the entire

00:24:32.970 --> 00:24:36.530
constellation, considering only the motif choices

00:24:36.530 --> 00:24:38.000
available at zone 1.

00:24:38.000 --> 00:24:41.530
Then, keeping zone 1 links fixed, we remove the

00:24:41.530 --> 00:24:43.000
rest of the links.

00:24:43.000 --> 00:24:46.130
We repeat the same process for zone 2 and then

00:24:46.130 --> 00:24:50.000
for zone 3 and arrive at the 3 zone multimotif.

00:24:50.000 --> 00:24:53.300
This is the final 3 zone multimotif scheme for

00:24:53.300 --> 00:24:57.000
the 40 squared constellation we are looking at.

00:24:57.000 --> 00:25:00.130
As you can see in the plot, the multimotifs offer

00:25:00.130 --> 00:25:03.100
a higher performance beyond the single motif

00:25:03.100 --> 00:25:04.000
frontier.

00:25:04.000 --> 00:25:08.130
Different alpha values result in different multimotifs,

00:25:08.130 --> 00:25:10.320
and as we give higher priority to stretch, the

00:25:10.320 --> 00:25:13.000
schemes move towards plus grid.

00:25:13.000 --> 00:25:15.850
Putting all of this together, these are the

00:25:15.850 --> 00:25:18.760
performance improvements above the baseline plus

00:25:18.760 --> 00:25:20.000
grid connectivity.

00:25:20.000 --> 00:25:22.730
Starling sees more than 2x improvement over

00:25:22.730 --> 00:25:26.000
baseline, while Kuiper also has similar benefits.

00:25:26.000 --> 00:25:29.230
We also considered settings where the links need

00:25:29.230 --> 00:25:31.550
to be shorter due to power constraints instead of

00:25:31.550 --> 00:25:33.680
just the visibility constraint we considered thus

00:25:33.680 --> 00:25:34.000
far.

00:25:34.000 --> 00:25:37.030
In the most pessimistic case, a constellation

00:25:37.030 --> 00:25:40.230
must at least allow link lengths that suffice for

00:25:40.230 --> 00:25:42.000
plus grid connectivity.

00:25:42.000 --> 00:25:45.890
Even in this worst case scenario, Starling sees a

00:25:45.890 --> 00:25:49.000
40% improvement over plus grid.

00:25:49.000 --> 00:25:51.670
I'll briefly note that this work is just one of

00:25:51.670 --> 00:25:54.460
several satellite networking problems we are

00:25:54.460 --> 00:25:56.000
exploring in our lab.

00:25:56.000 --> 00:25:58.740
So now I touch upon some of the open questions we

00:25:58.740 --> 00:26:00.000
are trying to attack.

00:26:00.000 --> 00:26:02.870
How do we design satellite trajectories in order

00:26:02.870 --> 00:26:05.000
to improve network performance?

00:26:05.000 --> 00:26:07.370
There are various dimensions to explore,

00:26:07.370 --> 00:26:09.810
including the number of shells, orbits,

00:26:09.810 --> 00:26:13.000
satellites per orbit, inclination, and elevation.

00:26:13.000 --> 00:26:16.010
We are working on routing and congestion control

00:26:16.010 --> 00:26:19.110
challenges, as I briefly touched upon earlier in

00:26:19.110 --> 00:26:20.000
this talk.

00:26:20.000 --> 00:26:23.340
To help bootstrap research in this area, we are

00:26:23.340 --> 00:26:25.880
actively developing packet-level and flow-level

00:26:25.880 --> 00:26:28.300
simulators that capture the necessary system

00:26:28.300 --> 00:26:29.000
dynamics.

00:26:29.000 --> 00:26:32.080
With that, I thank you for your attention, and

00:26:32.080 --> 00:26:34.000
now I'm open to questions.

